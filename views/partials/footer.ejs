<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js" integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+" crossorigin="anonymous"></script>
<div class="modal" tabindex="-1" role="dialog" id="calendar">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Disponibilités - Cocher les heures où
            vous êtes disponible pour les visites. Vous pouvez
            sélectionner plusieurs cases en gardant le bouton
            appuyé.
            </h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-primary btn-submit" onclick="saveTimeSlot()">Valider</button>
          <button type="button" class="btn btn-warning" onclick="resetTimeSlot()">Réinitialiser</button>
        </div>
      </div>
    </div>
  </div>
<script>

    function resetTimeSlot(){
        $(".timeslot").removeClass("selected");
    }
    function saveTimeSlot(){
        var timeslots=[];
        var table = $("#calendar .modal-body table");
        var rows=table.find("tr");
        var index=0;
        rows.each(function(){
            var rowCells = $(this).find("td");
            rowCells.each(function(){
                
                if($(this).hasClass("timeslot")){
                    index++;        
                    if($(this).hasClass("selected")){
                        timeslots.push(index)
                    }else{
                        timeslots.push(0)
                    }
            }
            })
        })
        //filter timeslots remove 0 values
        filtered = timeslots.filter(function (el) {
            return el != 0;
        });
        if(filtered.length<6){
            alert("Veuillez cocher au moins 3 heures de disponibilité");
            return;
        }
        $("#availibility").val(timeslots.join(","));
        $("#calendar").modal('hide');
    }
    function selectTimeSlot(){
        var start_time="07:00";
        var end_time="22:00";
        var table='<table class="table table-bordered">';
        // table+='<thead>';
        // table+='<tr>';
        // table+='<th>Day</th>';

        

        // start_time_int=parseInt(start_time.split(":")[0]);
        // end_time_int=parseInt(end_time.split(":")[0]);
        // for(var i=start_time_int;i<end_time_int;i+=0.5){
        //     var time=i.toString().split(".");
        //     if(time[1] == "5"){
        //         time[1]="30";
        //     }else{
        //         time[1]="00";
        //     }
        //     time=time.join(":");
        //     //am pm
        //     if(i<12){
        //         time+=" AM";
        //     }else{
        //         time+=" PM";
        //     }
        //     table+='<th>'+time+'</th>';
        // }
        // table+='</tr>';
        // table+='</thead>';
        // table+='<tbody>';
        // var days=['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];
        // for(var i=0;i<days.length;i++){
        //     table+='<tr>';
        //     table+='<td>'+days[i]+'</td>';
        //     for(var j=start_time_int;j<end_time_int;j+=0.5){
        //         table+='<td class="timeslot"></td>';
        //     }
        //     table+='</tr>';
        // }
        // table+='</tbody>';
        // table+='</table>';

        // var table = '<table>';
        table += '<thead>';
        table += '<tr>';
        var days = ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'];
        table += '<th>Horaire</th>';
        for (var i = 0; i < days.length; i++) {
            table += '<th>' + days[i] + '</th>';
        }
        table += '</tr>';
        table += '</thead>';
        table += '<tbody>';
        var start_time_int = parseInt(start_time.split(":")[0]);
        var end_time_int = parseInt(end_time.split(":")[0]);
        for (var i = start_time_int; i < end_time_int; i += 0.5) {
            var time = i.toString().split(".");
            if (time[1] == "5") {
                time[1] = "30";
            } else {
                time[1] = "00";
            }
            time = time.join(":");
            //am pm
            // if (i < 12) {
            //     time += " AM";
            // } else {
            //     time += " PM";
            // }
            table += '<tr>';
            table += '<td class="time">' + time + '</td>';
            for (var j = 0; j < days.length; j++) {
                table += '<td class="timeslot"></td>';
            }
            table += '</tr>';
        }
        table += '</tbody>';
        table += '</table>';

        $("#calendar .modal-body").html(table);

        var availibility=$("#availibility").val();
        if(availibility != ""){
            var timeslots=availibility.split(",");
            var table = $("#calendar .modal-body table");
            var rows=table.find("tr");
            var index=0;
            rows.each(function(){
                var rowCells = $(this).find("td");
                rowCells.each(function(){
                    if($(this).hasClass("timeslot")){
                        if(timeslots[index] != 0){
                            $(this).addClass("selected");
                        }
                        index++;
                }
                })
            })
        }

        $("#calendar").modal('show');
    }

var isMouseDown = false;
var startRowIndex = null;
var startCellIndex = null;

function selectTo(cell) {
    
    var row = cell.parent();    
    var cellIndex = cell.index();
    var rowIndex = row.index();

    var rowStart, rowEnd, cellStart, cellEnd;
    
    if (rowIndex < startRowIndex) {
        rowStart = rowIndex;
        rowEnd = startRowIndex;
    } else {
        rowStart = startRowIndex;
        rowEnd = rowIndex;
    }
    
    if (cellIndex < startCellIndex) {
        cellStart = cellIndex;
        cellEnd = startCellIndex;
    } else {
        cellStart = startCellIndex;
        cellEnd = cellIndex;
    }        
    var table = $("#calendar .modal-body table");    
    
    for (var i = rowStart; i <= rowEnd; i++) {
        var rowCells = table.find("tr").eq(i+1).find("td");
        for (var j = cellStart; j <= cellEnd; j++) {
            //if selected then deselect
            if(!selectBoxes){
                rowCells.eq(j).removeClass("selected");
            }else{
                rowCells.eq(j).addClass("selected");
            }
            
        }        
    }
}
//get mouse clicked event and click release event
$(document).on("mouseup", function (e) {
    isMouseDown = false;
})
var selectBoxes=true;
$(document).on("mousedown", "#calendar table td:not(.time)", function (e) {
    isMouseDown = true;
    var cell = $(this);
    var table = $("#calendar .modal-body table");    

    // table.find(".selected").removeClass("selected"); // deselect everything
    if(cell.hasClass("selected")){
        cell.removeClass("selected")
        startCellIndex = cell.index();
        startRowIndex = cell.parent().index();
        selectBoxes=false;
    }else{
        selectBoxes=true;
        if (e.shiftKey) {
            selectTo(cell);                
        } else {
            cell.addClass("selected");
            startCellIndex = cell.index();
            startRowIndex = cell.parent().index();
        }
}

    return false; // prevent text selection
})

$(document).on("mouseover", "#calendar table td", function (e) {
    if (!isMouseDown) return;
    var table = $("#calendar .modal-body table");    

    // table.find(".selected").removeClass("selected");

    selectTo($(this));        
})

$(document).on("selectstart", "#calendar table td", function (e) {
    return false;
    
})

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= process.env.GOOGLE_MAP_API_KEY %>&libraries=places&callback=initAutocomplete" async defer></script>

<script>
    function initAutocomplete() {
        var input = document.getElementById('address');
        var options = {
          componentRestrictions: {country: 'fr'}
        };
        var autocomplete = new google.maps.places.Autocomplete(input,options);
        //on place change
        autocomplete.addListener('place_changed', function() {
            var place = autocomplete.getPlace();
            var routes = [];
            var street_number = '';
            var administrative_area_level_3 = '';
            var locality = '';
            for (var i = 0; i < place.address_components.length; i++) {
                console.log(place.address_components[i]);
                var addressType = place.address_components[i].types[0];
                if (addressType == 'postal_code') {
                    $('#postal_code').val(place.address_components[i].long_name);
                }
                if (addressType == 'locality') {
                    locality = place.address_components[i].long_name;
                    
                }
                if (addressType == 'street_number') {
                    street_number = place.address_components[i].long_name;
                }
                if (addressType == 'route') {
                    street_number = street_number + ' ' + place.address_components[i].long_name;
                    
                }
                //sometimes it is not necessary to have street_number
                // if (addressType == 'administrative_area_level_1') {
                //     routes.push(place.address_components[i].long_name);
                // }
                // if (addressType == 'administrative_area_level_2') {
                //     routes.push(place.address_components[i].long_name);

                // }
                if (addressType == 'administrative_area_level_3') {
                    administrative_area_level_3 = place.address_components[i].long_name;
                    

                }
                // if (addressType == 'sublocality_level_1') {
                //     routes.push(place.address_components[i].long_name);

                // }
                // if (addressType == 'sublocality_level_2') {
                //     routes.push(place.address_components[i].long_name);

                // }
                // if (addressType == 'sublocality_level_3') {
                //     routes.push(place.address_components[i].long_name);

                // }
            }
            if(locality != ''){
                $('#locality').val(locality);
            }else{
                $('#locality').val(administrative_area_level_3);
            }
            $('#street_number').val(street_number);
            // $('#street_address').val(routes.join(', '));
            //set lat and lng
            $('#lat').val(place.geometry.location.lat());
            $('#lng').val(place.geometry.location.lng());
            
        });
    }
    
</script>